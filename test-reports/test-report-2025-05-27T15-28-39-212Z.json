{
  "timestamp": "2025-05-27T15:28:39.211Z",
  "summary": {
    "totalSuites": 6,
    "passedSuites": 1,
    "failedSuites": 5,
    "totalTests": 346,
    "passedTests": 251,
    "failedTests": 95,
    "skippedTests": 0,
    "totalDuration": 525
  },
  "suites": {
    "unit": {
      "name": "Unit Tests",
      "command": "npm run test:unit",
      "success": false,
      "results": {
        "total": 80,
        "passed": 61,
        "failed": 19,
        "skipped": 0,
        "duration": 52
      },
      "output": "\n> com.chatgtp.assistent@1.0.0 test:unit\n> mocha test/unit/**/*.test.js --recursive --timeout 5000\n\n\n\n  Advanced Multilingual Matcher\n    String Distance and Similarity\n      ✔ should calculate Levenshtein distance correctly\n      ✔ should calculate similarity scores correctly\n    Unicode Normalization\n      ✔ should normalize Swedish characters\n      ✔ should normalize French characters\n      ✔ should normalize German characters\n      ✔ should handle mixed character sets\n    Definite Article Removal\n      ✔ should remove English definite articles\n      1) should remove Swedish definite articles\n      ✔ should remove French definite articles\n      ✔ should remove German definite articles\n      2) should handle unknown languages gracefully\n    Phonetic Variations\n      3) should generate phonetic variations for common words\n      4) should generate variations for Swedish words\n      ✔ should handle short words\n      5) should handle empty input\n    Fuzzy Matching\n      ✔ should find exact matches with high confidence\n      6) should find close matches with good confidence\n      ✔ should handle Swedish room names\n      ✔ should handle character variations\n      ✔ should return null for no good matches\n      ✔ should handle empty candidates\n      ✔ should handle empty input\n    Room Matching\n      ✔ should find best room match with exact name\n      ✔ should find best room match with fuzzy matching\n      ✔ should handle Swedish room names with definite articles\n      ✔ should handle character variations in Swedish\n    Comprehensive Room Matching\n      ✔ should use fuzzy matching for high confidence matches\n      ✔ should fall back to LLM for low confidence fuzzy matches\n      ✔ should handle LLM function errors gracefully\n      ✔ should work without LLM function\n      ✔ should handle Swedish room matching with LLM fallback\n    Performance and Edge Cases\n      ✔ should handle very long room names\n      ✔ should handle special characters in room names\n      ✔ should handle numeric room names\n      ✔ should be case insensitive\n\n  Device Status Retriever\n    getDeviceStatus\n      ✔ should retrieve status for a light device\n      ✔ should retrieve status for a thermostat device\n      ✔ should handle offline devices\n      ✔ should handle devices with no capabilities\n    getRoomStatus\n      ✔ should retrieve status for a room with exact name match\n      ✔ should handle Swedish room names with fuzzy matching\n      ✔ should handle room names with character variations\n      ✔ should return error for non-existent room\n      ✔ should handle rooms with no devices\n    getDeviceTypeStatus\n      ✔ should retrieve all lights in the home\n      ✔ should filter lights by room\n      ✔ should handle device types with no matches\n      ✔ should handle thermostats correctly\n    generateDeviceSummary\n      ✔ should generate summary for light device\n      ✔ should generate summary for thermostat device\n      ✔ should handle devices with missing capabilities\n      ✔ should handle offline devices in summary\n    Error Handling\n      ✔ should handle device capability retrieval errors\n      ✔ should handle null device input\n      ✔ should handle invalid room matching\n\n  Status Query Processor\n    Status Query Detection\n      7) should detect English status queries\n      ✔ should detect Swedish status queries\n      ✔ should detect French status queries\n      ✔ should reject non-status queries\n    Status Query Parsing\n      ✔ should parse room status queries correctly\n      8) should parse device type queries correctly\n      9) should parse global status queries correctly\n      ✔ should handle Swedish room names with special characters\n      ✔ should return null type for non-status queries\n      ✔ should handle empty or invalid input\n    Multilingual Support\n      10) should handle en status queries\n      11) should handle sv status queries\n      12) should handle fr status queries\n      13) should handle de status queries\n      14) should handle es status queries\n      15) should handle it status queries\n      16) should handle pt status queries\n      17) should handle nl status queries\n    Confidence Scoring\n      18) should assign high confidence to clear status queries\n      ✔ should assign medium confidence to ambiguous queries\n      ✔ should assign low confidence to unclear queries\n    Edge Cases\n      ✔ should handle mixed language queries\n      ✔ should handle typos and variations\n      19) should handle very long queries\n      ✔ should handle very short queries\n\n\n  61 passing (52ms)\n  19 failing\n\n  1) Advanced Multilingual Matcher\n       Definite Article Removal\n         should remove Swedish definite articles:\n\n      AssertionError: expected 'vardagsrumm' to equal 'vardagsrum'\n      + expected - actual\n\n      -vardagsrumm\n      +vardagsrum\n      \n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:84:64)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) Advanced Multilingual Matcher\n       Definite Article Removal\n         should handle unknown languages gracefully:\n\n      AssertionError: expected 'the kitchen' to equal 'kitchen'\n      + expected - actual\n\n      -the kitchen\n      +kitchen\n      \n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:102:67)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) Advanced Multilingual Matcher\n       Phonetic Variations\n         should generate phonetic variations for common words:\n     AssertionError: expected [ 'kitchen' ] to include 'kithen'\n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:111:29)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) Advanced Multilingual Matcher\n       Phonetic Variations\n         should generate variations for Swedish words:\n     AssertionError: expected [ 'vardagsrum', 'wardagsrum' ] to include 'vardagsrumm'\n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:118:29)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  5) Advanced Multilingual Matcher\n       Phonetic Variations\n         should handle empty input:\n\n      AssertionError: expected [] to deeply equal [ '' ]\n      + expected - actual\n\n      -[]\n      +[\n      +  \"\"\n      +]\n      \n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:130:34)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  6) Advanced Multilingual Matcher\n       Fuzzy Matching\n         should find close matches with good confidence:\n\n      AssertionError: expected { match: 'Kitchen', …(4) } to have property 'method' of 'similarity', but got 'levenshtein'\n      + expected - actual\n\n      -levenshtein\n      +similarity\n      \n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:150:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  7) Status Query Processor\n       Status Query Detection\n         should detect English status queries:\n\n      AssertionError: expected false to be true\n      + expected - actual\n\n      -false\n      +true\n      \n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:24:49\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:23:15)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  8) Status Query Processor\n       Status Query Parsing\n         should parse device type queries correctly:\n     AssertionError: expected { type: 'device_status', …(5) } to have property 'room' of 'kitchen', but got null\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:81:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  9) Status Query Processor\n       Status Query Parsing\n         should parse global status queries correctly:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'type' of 'global_status', but got null\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:88:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  10) Status Query Processor\n       Multilingual Support\n         should handle en status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  11) Status Query Processor\n       Multilingual Support\n         should handle sv status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  12) Status Query Processor\n       Multilingual Support\n         should handle fr status queries:\n\n      AssertionError: expected 0.5 to be above 0.5\n      + expected - actual\n\n\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:130:45\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  13) Status Query Processor\n       Multilingual Support\n         should handle de status queries:\n\n      AssertionError: expected 0.5 to be above 0.5\n      + expected - actual\n\n\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:130:45\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  14) Status Query Processor\n       Multilingual Support\n         should handle es status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  15) Status Query Processor\n       Multilingual Support\n         should handle it status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  16) Status Query Processor\n       Multilingual Support\n         should handle pt status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  17) Status Query Processor\n       Multilingual Support\n         should handle nl status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  18) Status Query Processor\n       Confidence Scoring\n         should assign high confidence to clear status queries:\n\n      AssertionError: expected 0.8 to be above 0.8\n      + expected - actual\n\n\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:148:43\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:145:20)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  19) Status Query Processor\n       Edge Cases\n         should handle very long queries:\n\n      AssertionError: expected 0.5 to be above 0.6\n      + expected - actual\n\n      -0.5\n      +0.6\n      \n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:220:39)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n",
      "error": "Error in semantic matching: Error: LLM Error\n    at Context.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/advancedMultilingualMatcher.test.js:246:45)\n    at callFn (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:364:21)\n    at Runnable.run (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:352:5)\n    at Runner.runTest (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:677:10)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:800:12\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:592:14)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:602:7\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:485:14)\n    at Immediate.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:570:5)\n    at process.processImmediate (node:internal/timers:491:21)\nFailed to get capability onoff for device Faulty Device: Error: Device error\n    at Context.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/deviceStatusRetriever.test.js:309:47)\n    at callFn (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:364:21)\n    at Runnable.run (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:352:5)\n    at Runner.runTest (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:677:10)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:800:12\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:592:14)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:602:7\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:485:14)\n    at Immediate.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:570:5)\n    at process.processImmediate (node:internal/timers:491:21)\nFailed to get capability dim for device Faulty Device: Error: Device error\n    at Context.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/deviceStatusRetriever.test.js:309:47)\n    at callFn (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:364:21)\n    at Runnable.run (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:352:5)\n    at Runner.runTest (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:677:10)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:800:12\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:592:14)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:602:7\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:485:14)\n    at Immediate.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:570:5)\n    at process.processImmediate (node:internal/timers:491:21)\n"
    },
    "integration": {
      "name": "Integration Tests",
      "command": "npm run test:integration",
      "success": false,
      "results": {
        "total": 52,
        "passed": 34,
        "failed": 18,
        "skipped": 0,
        "duration": 82
      },
      "output": "\n> com.chatgtp.assistent@1.0.0 test:integration\n> mocha test/integration/**/*.test.js --recursive --timeout 15000\n\n\n\n  Multilingual Command Processing Integration\n    Single Language Commands\n      ✔ should process en commands end-to-end\n      ✔ should process sv commands end-to-end\n      ✔ should process fr commands end-to-end\n      1) should process de commands end-to-end\n      ✔ should process es commands end-to-end\n      ✔ should process it commands end-to-end\n      ✔ should process pt commands end-to-end\n      ✔ should process nl commands end-to-end\n    Multi-Command Processing\n      2) should detect and parse English multi-commands\n      3) should handle Swedish multi-commands\n      ✔ should process multi-commands with room context\n    Mixed Language Commands\n      ✔ should handle English commands with Swedish room names\n      ✔ should handle Swedish commands with English device names\n      ✔ should handle completely mixed language commands\n    Device Type Filtering\n      ✔ should filter to lights when lights are mentioned\n      4) should distinguish between device types correctly\n      5) should handle generic room commands appropriately\n    Command Preprocessing\n      ✔ should improve command clarity through preprocessing\n      6) should handle typos and spelling errors\n      7) should suggest improvements for unclear commands\n    Performance and Scalability\n      ✔ should process commands efficiently\n      ✔ should handle concurrent command processing\n      ✔ should handle very long commands\n    Error Handling and Edge Cases\n      ✔ should handle empty commands gracefully\n      ✔ should handle unknown languages\n      ✔ should handle commands with no recognizable elements\n      8) should handle special characters and emojis\n\n  Status Query Workflow Integration\n    English Status Queries\n      9) should handle kitchen lights status query end-to-end\n      ✔ should handle room status query for bedroom\n      10) should handle global status query\n    Swedish Status Queries\n      ✔ should handle Swedish room status with character variations\n      11) should handle Swedish device type query\n      12) should handle Swedish room with definite article\n    Multilingual Support\n      ✔ should handle en status queries\n      ✔ should handle sv status queries\n      ✔ should handle fr status queries\n      ✔ should handle de status queries\n      ✔ should handle es status queries\n    Error Handling\n      13) should handle non-existent room gracefully\n      ✔ should handle malformed queries\n      14) should handle empty home state\n      ✔ should handle LLM function errors\n    Performance and Limits\n      15) should respect maxDevices limit\n      ✔ should handle large home states efficiently\n      ✔ should handle concurrent queries\n    Formatting and Localization\n      16) should format English responses correctly\n      17) should format Swedish responses correctly\n      ✔ should include device details when requested\n      18) should provide summary when details not requested\n    Regression Tests\n      ✔ should handle the Swedish kitchen light status bug\n      ✔ should handle character variations in Swedish room names\n      ✔ should return all matching devices for device type queries\n\n\n  34 passing (82ms)\n  18 failing\n\n  1) Multilingual Command Processing Integration\n       Single Language Commands\n         should process de commands end-to-end:\n\n      AssertionError: expected false to be true\n      + expected - actual\n\n      -false\n      +true\n      \n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/integration/multilingualCommandProcessing.test.js:42:35\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:29:18)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) Multilingual Command Processing Integration\n       Multi-Command Processing\n         should detect and parse English multi-commands:\n     AssertionError: expected [ …(2) ] to have property 'isMultiCommand'\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:56:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) Multilingual Command Processing Integration\n       Multi-Command Processing\n         should handle Swedish multi-commands:\n\n      AssertionError: expected false to be true\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:70:28)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) Multilingual Command Processing Integration\n       Device Type Filtering\n         should distinguish between device types correctly:\n     AssertionError: expected [ 'temperature' ] to include 'thermostat'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/integration/multilingualCommandProcessing.test.js:150:39\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:148:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  5) Multilingual Command Processing Integration\n       Device Type Filtering\n         should handle generic room commands appropriately:\n     AssertionError: expected [] to include 'light'\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:162:37)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  6) Multilingual Command Processing Integration\n       Command Preprocessing\n         should handle typos and spelling errors:\n     AssertionError: expected [] not to be empty\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/integration/multilingualCommandProcessing.test.js:200:51\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:196:20)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  7) Multilingual Command Processing Integration\n       Command Preprocessing\n         should suggest improvements for unclear commands:\n     AssertionError: expected { original: 'on', …(7) } to have property 'suggestion'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/integration/multilingualCommandProcessing.test.js:216:37\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:212:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  8) Multilingual Command Processing Integration\n       Error Handling and Edge Cases\n         should handle special characters and emojis:\n\n      AssertionError: expected 0.6 to be above 0.6\n      + expected - actual\n\n\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:306:39)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  9) Status Query Workflow Integration\n       English Status Queries\n         should handle kitchen lights status query end-to-end:\n\n      AssertionError: expected { success: true, …(5) } to have property 'type' of 'device_type_status', but got 'device_status'\n      + expected - actual\n\n      -device_status\n      +device_type_status\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:34:30)\n\n  10) Status Query Workflow Integration\n       English Status Queries\n         should handle global status query:\n\n      AssertionError: expected { success: false, …(3) } to have property 'success' of true, but got false\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:64:30)\n\n  11) Status Query Workflow Integration\n       Swedish Status Queries\n         should handle Swedish device type query:\n     AssertionError: expected '🔧 **Multiple Devices Found** (4)\\n\\n…' to include 'ljus'\n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:94:39)\n\n  12) Status Query Workflow Integration\n       Swedish Status Queries\n         should handle Swedish room with definite article:\n\n      AssertionError: expected { success: false, …(3) } to have property 'success' of true, but got false\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:105:30)\n\n  13) Status Query Workflow Integration\n       Error Handling\n         should handle non-existent room gracefully:\n\n      AssertionError: expected { success: true, …(5) } to have property 'success' of false, but got true\n      + expected - actual\n\n      -true\n      +false\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:142:30)\n\n  14) Status Query Workflow Integration\n       Error Handling\n         should handle empty home state:\n\n      AssertionError: expected { success: false, …(3) } to have property 'success' of true, but got false\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:168:30)\n\n  15) Status Query Workflow Integration\n       Performance and Limits\n         should respect maxDevices limit:\n\n      AssertionError: expected 5 to be at most 2\n      + expected - actual\n\n      -5\n      +2\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:202:36)\n\n  16) Status Query Workflow Integration\n       Formatting and Localization\n         should format English responses correctly:\n     AssertionError: expected '🔧 **Multiple Devices Found** (4)\\n\\n…' to include 'device'\n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:268:39)\n\n  17) Status Query Workflow Integration\n       Formatting and Localization\n         should format Swedish responses correctly:\n     AssertionError: expected '🔧 **Multiple Devices Found** (4)\\n\\n…' to include 'enhet'\n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:282:39)\n\n  18) Status Query Workflow Integration\n       Formatting and Localization\n         should provide summary when details not requested:\n     AssertionError: expected '🔧 **Multiple Devices Found** (4)\\n\\n…' to not include '💡'\n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:307:43)\n\n\n\n",
      "error": ""
    },
    "regression": {
      "name": "Regression Tests",
      "command": "npm run test:regression",
      "success": false,
      "results": {
        "total": 18,
        "passed": 10,
        "failed": 8,
        "skipped": 0,
        "duration": 38
      },
      "output": "\n> com.chatgtp.assistent@1.0.0 test:regression\n> mocha test/regression/**/*.test.js --recursive --timeout 10000\n\n\n\n  Regression Tests - Fixed Bugs\n    Swedish Kitchen Light Status Bug\n      ✔ should not incorrectly translate English livingroom to Swedish\n      ✔ should handle Swedish kitchen light status correctly\n    Swedish Room Name Translation Bug\n      1) should not translate Swedish trädgården to English garden\n      ✔ should match trädgården to Trägården correctly\n    Multi-Command Validation Bug\n      2) should accept multi-command JSON structures\n      3) should detect and parse multi-commands correctly\n    Device Type Filtering Bug\n      ✔ should filter to lights only when lights are mentioned\n      ✔ should filter to lights for typo \"ligt\"\n      4) should prefer lights for generic room commands\n    Status Query Single Device Bug\n      ✔ should return all lights when asking about lights in a room\n    Language Detection Edge Cases\n      ✔ should handle mixed language commands without crashing\n    Unicode Character Handling Bug\n      ✔ should handle Swedish characters in room names correctly\n      ✔ should normalize unicode characters for matching\n    Empty Response Bug\n      5) should provide meaningful error messages for failed queries\n      6) should handle empty home state gracefully\n    Confidence Score Bug\n      7) should assign reasonable confidence to clear commands\n      8) should assign reasonable confidence to Swedish commands\n    Performance Regression\n      ✔ should process commands within reasonable time limits\n\n\n  10 passing (38ms)\n  8 failing\n\n  1) Regression Tests - Fixed Bugs\n       Swedish Room Name Translation Bug\n         should not translate Swedish trädgården to English garden:\n\n      AssertionError: expected 'garden' to not equal 'garden'\n      + expected - actual\n\n\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:60:38)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  2) Regression Tests - Fixed Bugs\n       Multi-Command Validation Bug\n         should accept multi-command JSON structures:\n     AssertionError: expected [ { room: 'living room', …(2) }, …(1) ] to be true\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:96:35)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) Regression Tests - Fixed Bugs\n       Multi-Command Validation Bug\n         should detect and parse multi-commands correctly:\n     AssertionError: expected [ …(2) ] to have property 'isMultiCommand'\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:107:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) Regression Tests - Fixed Bugs\n       Device Type Filtering Bug\n         should prefer lights for generic room commands:\n     AssertionError: expected [] to include 'light'\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:139:59)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  5) Regression Tests - Fixed Bugs\n       Empty Response Bug\n         should provide meaningful error messages for failed queries:\n\n      AssertionError: expected { success: true, …(5) } to have property 'success' of false, but got true\n      + expected - actual\n\n      -true\n      +false\n      \n      at Context.<anonymous> (test/regression/fixedBugs.test.js:236:30)\n\n  6) Regression Tests - Fixed Bugs\n       Empty Response Bug\n         should handle empty home state gracefully:\n\n      AssertionError: expected { success: false, …(3) } to have property 'success' of true, but got false\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/regression/fixedBugs.test.js:252:30)\n\n  7) Regression Tests - Fixed Bugs\n       Confidence Score Bug\n         should assign reasonable confidence to clear commands:\n\n      AssertionError: expected 0.6 to be above 0.7\n      + expected - actual\n\n      -0.6\n      +0.7\n      \n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/regression/fixedBugs.test.js:270:41\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:268:21)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  8) Regression Tests - Fixed Bugs\n       Confidence Score Bug\n         should assign reasonable confidence to Swedish commands:\n\n      AssertionError: expected 0.6 to be above 0.6\n      + expected - actual\n\n\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/regression/fixedBugs.test.js:284:41\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:282:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n",
      "error": ""
    },
    "performance": {
      "name": "Performance Tests",
      "command": "npm run test:performance",
      "success": false,
      "results": {
        "total": 13,
        "passed": 11,
        "failed": 2,
        "skipped": 0,
        "duration": 100
      },
      "output": "\n> com.chatgtp.assistent@1.0.0 test:performance\n> mocha test/performance/**/*.test.js --recursive --timeout 30000\n\n\n\n  Performance Benchmarks\n    Command Processing Performance\n      ✔ should process simple commands quickly\n      ✔ should handle batch command processing efficiently\n      ✔ should handle concurrent command processing\n    Status Query Performance\n      ✔ should handle status queries on large home states efficiently\n      ✔ should handle concurrent status queries\n      1) should limit response size for large device sets\n    Room Matching Performance\n      ✔ should perform fuzzy room matching quickly\n      ✔ should handle large room lists efficiently\n    Memory Usage\n      ✔ should not leak memory during repeated operations\n      ✔ should handle large data structures efficiently\n    Stress Testing\n      2) should handle rapid-fire commands without degradation\n      ✔ should handle mixed workload efficiently\n    Scalability Limits\n      ✔ should handle maximum reasonable home size\n\n\n  11 passing (100ms)\n  2 failing\n\n  1) Performance Benchmarks\n       Status Query Performance\n         should limit response size for large device sets:\n     AssertionError: expected '🔧 **Multiple Devices Found** (5)\\n\\n…' to include '10'\n      at Context.<anonymous> (test/performance/benchmarks.test.js:208:39)\n\n  2) Performance Benchmarks\n       Stress Testing\n         should handle rapid-fire commands without degradation:\n\n      AssertionError: expected 0.3 to be above 0.5\n      + expected - actual\n\n      -0.3\n      +0.5\n      \n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/performance/benchmarks.test.js:319:55\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/performance/benchmarks.test.js:313:16)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n",
      "error": "LLM returned invalid room name: Trägården\nLLM returned invalid room name: Trägården\nLLM returned invalid room name: Kitchen\n"
    },
    "legacy": {
      "name": "Legacy Tests",
      "command": "npm run test:legacy",
      "success": true,
      "results": {
        "total": 0,
        "passed": 0,
        "failed": 0,
        "skipped": 0,
        "duration": 0
      },
      "output": "\n> com.chatgtp.assistent@1.0.0 test:legacy\n> node test/multilingual-test.js && node test/command-processing-test.js && node test/multi-command-test.js\n\n🚀 Starting Comprehensive Multilingual Test Suite\n\n🌍 Running Multilingual Voice Command Tests\n\n\n📍 Testing EN commands:\n\n  Test 1: \"Turn on the living room lights\"\n    Rooms: [living room] ✅\n    Actions: [turn_on] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 2: \"Dim bedroom lights to 50 percent\"\n    Rooms: [bedroom] ✅\n    Actions: [dim] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 3: \"Set temperature to 22 degrees in kitchen\"\n    Rooms: [kitchen] ✅\n    Actions: [set_temperature] ✅\n    Devices: [temperature] ❌\n    Confidence: 0.90\n    ❌ FAILED\n\n📍 Testing ES commands:\n\n  Test 1: \"Encender las luces de la sala de estar\"\n    Rooms: [living room] ✅\n    Actions: [turn_on] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 2: \"Apagar dormitorio\"\n    Rooms: [bedroom] ✅\n    Actions: [turn_on] ❌\n    Devices: [] ✅\n    Confidence: 0.60\n    ❌ FAILED\n\n  Test 3: \"Poner música en la cocina\"\n    Rooms: [kitchen] ✅\n    Actions: [play_music] ✅\n    Devices: [speaker] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n📍 Testing FR commands:\n\n  Test 1: \"Allumer les lumières du salon\"\n    Rooms: [living room] ✅\n    Actions: [turn_on] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 2: \"Éteindre la chambre\"\n    Rooms: [bedroom] ✅\n    Actions: [turn_on] ❌\n    Devices: [] ✅\n    Confidence: 0.60\n    ❌ FAILED\n\n  Test 3: \"Jouer de la musique dans la cuisine\"\n    Rooms: [kitchen] ✅\n    Actions: [play_music] ✅\n    Devices: [speaker] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n📍 Testing DE commands:\n\n  Test 1: \"Wohnzimmer Licht einschalten\"\n    Rooms: [living room] ✅\n    Actions: [turn_on] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 2: \"Schlafzimmer ausschalten\"\n    Rooms: [bedroom] ✅\n    Actions: [turn_on] ❌\n    Devices: [] ✅\n    Confidence: 0.60\n    ❌ FAILED\n\n  Test 3: \"Musik in der Küche abspielen\"\n    Rooms: [kitchen] ✅\n    Actions: [play_music] ✅\n    Devices: [speaker] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n📍 Testing IT commands:\n\n  Test 1: \"Accendere le luci del soggiorno\"\n    Rooms: [living room] ✅\n    Actions: [turn_on] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 2: \"Spegnere camera da letto\"\n    Rooms: [bedroom] ✅\n    Actions: [turn_on] ❌\n    Devices: [] ✅\n    Confidence: 0.60\n    ❌ FAILED\n\n  Test 3: \"Suonare musica in cucina\"\n    Rooms: [kitchen] ✅\n    Actions: [play_music] ✅\n    Devices: [speaker] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n📍 Testing PT commands:\n\n  Test 1: \"Ligar as luzes da sala de estar\"\n    Rooms: [living room] ✅\n    Actions: [turn_on] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 2: \"Desligar quarto\"\n    Rooms: [bedroom] ✅\n    Actions: [turn_on, turn_on] ❌\n    Devices: [] ✅\n    Confidence: 0.90\n    ❌ FAILED\n\n  Test 3: \"Tocar música na cozinha\"\n    Rooms: [kitchen] ✅\n    Actions: [play_music] ✅\n    Devices: [speaker] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n📍 Testing NL commands:\n\n  Test 1: \"Woonkamer lichten aanzetten\"\n    Rooms: [living room] ✅\n    Actions: [turn_on] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 2: \"Slaapkamer uitzetten\"\n    Rooms: [bedroom] ✅\n    Actions: [turn_on] ❌\n    Devices: [] ✅\n    Confidence: 0.60\n    ❌ FAILED\n\n  Test 3: \"Muziek afspelen in de keuken\"\n    Rooms: [kitchen] ✅\n    Actions: [play_music] ✅\n    Devices: [speaker] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n📍 Testing SV commands:\n\n  Test 1: \"Sätt på vardagsrummet ljus\"\n    Rooms: [living room] ✅\n    Actions: [turn_on] ✅\n    Devices: [light] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n  Test 2: \"Stäng av sovrum\"\n    Rooms: [bedroom] ✅\n    Actions: [turn_on] ❌\n    Devices: [] ✅\n    Confidence: 0.60\n    ❌ FAILED\n\n  Test 3: \"Spela musik i köket\"\n    Rooms: [kitchen] ✅\n    Actions: [play_music] ✅\n    Devices: [speaker] ✅\n    Confidence: 0.90\n    ✅ PASSED\n\n📊 Multilingual Test Results: 16/24 passed (8 failed)\n\n🔗 Running Multi-Command Tests\n\nTest: \"Turn on lights and play music in living room\" (EN)\n  Rooms: [living room] ✅\n  Actions: [play_music, turn_on] ✅\n  Devices: [light, music] ❌\n  ❌ FAILED\n\nTest: \"Encender luces y poner música en sala de estar\" (ES)\n  Rooms: [living room] ✅\n  Actions: [play_music, turn_on] ✅\n  Devices: [light, speaker] ✅\n  ✅ PASSED\n\nTest: \"Allumer lumières et jouer musique dans salon\" (FR)\n  Rooms: [living room] ✅\n  Actions: [play_music, turn_on] ✅\n  Devices: [light, speaker] ✅\n  ✅ PASSED\n\nTest: \"Licht einschalten und Musik abspielen im Wohnzimmer\" (DE)\n  Rooms: [living room] ✅\n  Actions: [play_music, turn_on] ✅\n  Devices: [light, speaker] ✅\n  ✅ PASSED\n\n📊 Multi-Command Test Results: 3/4 passed (1 failed)\n\n🌐 Running Mixed Language Tests\n\nTest: \"Turn on vardagsrum lights\"\n  Room: living room ✅\n  Action: turn_on ✅\n  ✅ PASSED\n\nTest: \"Encender bedroom lights\"\n  Room: bedroom ✅\n  Action: turn_on ✅\n  ✅ PASSED\n\nTest: \"Allumer kök lights\"\n  Room: kitchen ✅\n  Action: turn_on ✅\n  ✅ PASSED\n\n📊 Mixed Language Test Results: 3/3 passed (0 failed)\n\n🔍 Running Language Detection Tests\n\nTest: \"Turn on the lights\"\n  Detected: en, Expected: en ✅\nTest: \"Encender las luces\"\n  Detected: es, Expected: es ✅\nTest: \"Allumer les lumières\"\n  Detected: fr, Expected: fr ✅\nTest: \"Licht einschalten\"\n  Detected: de, Expected: de ✅\nTest: \"Accendere le luci\"\n  Detected: it, Expected: it ✅\nTest: \"Ligar as luzes\"\n  Detected: es, Expected: pt ❌\nTest: \"Lichten aanzetten\"\n  Detected: de, Expected: nl ❌\nTest: \"Sätt på ljuset\"\n  Detected: sv, Expected: sv ✅\n\n📊 Language Detection Test Results: 6/8 passed (2 failed)\n\n🔧 Running Integration Tests\n\nTest: \"Encender luces vardagsrum\" (es)\n  Original: \"Encender luces vardagsrum\"\n  Processed: \"encender luces vardagsrum\"\n  Intent: turn_on\n  Confidence: 1.00\n  Language: es\n  Has Rooms: ✅\n  Has Intent: ✅\n  ✅ PASSED\n\nTest: \"Allumer ljus kök\" (fr)\n  Original: \"Allumer ljus kök\"\n  Processed: \"allumer ljus kök\"\n  Intent: turn_on\n  Confidence: 1.00\n  Language: fr\n  Has Rooms: ✅\n  Has Intent: ✅\n  ✅ PASSED\n\nTest: \"Wohnzimmer lights turn on\" (de)\n  Original: \"Wohnzimmer lights turn on\"\n  Processed: \"wohnzimmer lights turn on\"\n  Intent: turn_on\n  Confidence: 1.00\n  Language: de\n  Has Rooms: ✅\n  Has Intent: ✅\n  ✅ PASSED\n\n📊 Integration Test Results: 3/3 passed (0 failed)\n\n============================================================\n📈 OVERALL TEST RESULTS\n============================================================\nTotal Tests: 42\nPassed: 31 (73.8%)\nFailed: 11 (26.2%)\n\n⚠️  11 tests failed. Review the multilingual processing logic.\n\n🌍 Supported Languages:\n✅ English, Spanish, French, German, Italian, Portuguese, Dutch, Swedish\n✅ Mixed language commands\n✅ Multi-command processing\n✅ Automatic language detection\n🧪 Running Command Processing Tests\n\nTest 1: \"Please turn on the living room lights\"\n  Intent: turn_on ✅\n  Rooms: [living room] ✅\n  Devices: [light] ✅\n  Confidence: 1.00\n  ✅ PASSED\n\nTest 2: \"Switch off bedroom lamp\"\n  Intent: turn_on ❌\n  Rooms: [bedroom] ✅\n  Devices: [lamp, light] ✅\n  Confidence: 1.00\n  ❌ FAILED\n\nTest 3: \"Dim kitchen\"\n  Intent: dim ✅\n  Rooms: [kitchen] ✅\n  Devices: [] ✅\n  Confidence: 1.00\n  ✅ PASSED\n\nTest 4: \"Set temperature to 22 degrees in office\"\n  Intent: set_temperature ✅\n  Rooms: [office] ✅\n  Devices: [temperature, thermostat] ✅\n  Confidence: 1.00\n  ✅ PASSED\n\nTest 5: \"Turn on vardagsrum ljus\"\n  Intent: turn_on ✅\n  Rooms: [vardagsrum, living room] ✅\n  Devices: [ljus, light] ✅\n  Confidence: 1.00\n  ✅ PASSED\n\nTest 6: \"Lock the door\"\n  Intent: lock ✅\n  Rooms: [] ✅\n  Devices: [lock] ✅\n  Confidence: 1.00\n  ✅ PASSED\n\nTest 7: \"lights\"\n  Intent: turn_on ✅\n  Rooms: [] ✅\n  Devices: [light] ✅\n  Confidence: 0.70\n  ✅ PASSED\n\nTest 8: \"turn on the ligt in the livingroom\"\n  Intent: turn_on ✅\n  Rooms: [living, living room] ✅\n  Devices: [light] ✅\n  Confidence: 1.00\n  ✅ PASSED\n\n📊 Test Results: 7 passed, 1 failed\n⚠️  Some tests failed. Review the command processing logic.\n\n🔍 Example Command Processing:\n\nInput: \"Turn on all lights in the house\"\n  Processed: \"turn on all lights in the house\"\n  Intent: turn_on\n  Confidence: 1.00\n\nInput: \"Dim the bedroom lights to 50%\"\n  Processed: \"dim the bedroom lights to 50%\"\n  Intent: dim\n  Confidence: 1.00\n\nInput: \"Set living room temperature to 22\"\n  Processed: \"set living room temperature to 22\"\n  Intent: set_temperature\n  Confidence: 1.00\n\nInput: \"Open kitchen curtains\"\n  Processed: \"open kitchen curtains\"\n  Intent: open\n  Confidence: 1.00\n\nInput: \"Lock front door\"\n  Processed: \"lock front door\"\n  Intent: lock\n  Confidence: 1.00\n\nInput: \"lights on\"\n  Processed: \"lights on\"\n  Intent: turn_on\n  Confidence: 0.85\n\nInput: \"bedroom off\"\n  Processed: \"bedroom off\"\n  Intent: turn_on\n  Confidence: 1.00\n\nInput: \"help\"\n  Processed: \"help\"\n  Intent: turn_on\n  Confidence: 0.00\n  💡 Suggestion: Try to specify which room (e.g., 'living room', 'kitchen') and be more specific about the action (e.g., 'turn on', 'turn off') and mention what device or room you want to control.\n\n🧪 Testing Multi-Command Detection\n\nTest 1: \"turn on the lights and play music in the living room\"\nExpected: undefined\n  Multi-command detected: true ✅\n  Parsed commands: 2\n    1. \"turn on the lights\" (intent: turn_on)\n    2. \"play music in the living room\" (intent: play_music)\n  Command count: 2 ✅\n  ✅ PASSED\n\nTest 2: \"dim the bedroom lights and set temperature to 22\"\nExpected: undefined\n  Multi-command detected: true ✅\n  Parsed commands: 2\n    1. \"dim the bedroom lights\" (intent: dim)\n    2. \"set temperature to 22\" (intent: set_temperature)\n  Command count: 2 ✅\n  ✅ PASSED\n\nTest 3: \"turn on kitchen lights, then lock the front door\"\nExpected: undefined\n  Multi-command detected: true ✅\n  Parsed commands: 2\n    1. \"turn on kitchen lights,\" (intent: turn_on)\n    2. \"lock the front door\" (intent: lock)\n  Command count: 2 ✅\n  ✅ PASSED\n\nTest 4: \"turn off all lights in bedroom and close the curtains\"\nExpected: undefined\n  Multi-command detected: true ✅\n  Parsed commands: 2\n    1. \"turn off all lights in bedroom\" (intent: turn_on)\n    2. \"close the curtains\" (intent: close)\n  Command count: 2 ✅\n  ✅ PASSED\n\nTest 5: \"just turn on the living room lights\"\nExpected: undefined\n  Multi-command detected: false ✅\n  ✅ PASSED\n\nTest 6: \"play some relaxing music and dim the lights and set temperature to 20\"\nExpected: undefined\n  Multi-command detected: true ✅\n  Parsed commands: 3\n    1. \"play some relaxing music\" (intent: play_music)\n    2. \"dim the lights\" (intent: dim)\n    3. \"set temperature to 20\" (intent: set_temperature)\n  Command count: 3 ✅\n  ✅ PASSED\n\n📊 Detection Tests: 6 passed, 0 failed\n\n🎯 Testing Expected JSON Outputs\n\nOutput Test 1: \"turn on the lights and play music in the living room\"\nExpected JSON structure:\n{\n  \"commands\": [\n    {\n      \"room\": \"living room\",\n      \"command\": \"turn_on\",\n      \"device_filter\": \"light\"\n    },\n    {\n      \"room\": \"living room\",\n      \"command\": \"play_music\",\n      \"device_filter\": \"speaker\"\n    }\n  ]\n}\n\nOutput Test 2: \"dim bedroom lights and set temperature to 22\"\nExpected JSON structure:\n{\n  \"commands\": [\n    {\n      \"room\": \"bedroom\",\n      \"command\": \"dim\",\n      \"device_filter\": \"light\"\n    },\n    {\n      \"room\": \"bedroom\",\n      \"command\": \"set_temperature\",\n      \"parameters\": {\n        \"temperature\": 22\n      }\n    }\n  ]\n}\n\n🔍 Example Multi-Command Scenarios:\n\nScenario 1: \"turn on the lights and play melodic music in the living room\"\n  Multi-command: Yes\n  Confidence: 1.00\n  Individual commands (2):\n    1. \"turn on the lights\"\n       Intent: turn_on, Rooms: [], Devices: [light]\n    2. \"play melodic music in the living room\"\n       Intent: play_music, Rooms: [living room], Devices: [music, speaker]\n\nScenario 2: \"dim bedroom lights to 50% and set temperature to 22 degrees\"\n  Multi-command: Yes\n  Confidence: 1.00\n  Individual commands (2):\n    1. \"dim bedroom lights to 50%\"\n       Intent: dim, Rooms: [bedroom], Devices: [light]\n    2. \"set temperature to 22 degrees\"\n       Intent: set_temperature, Rooms: [], Devices: [temperature, thermostat]\n\nScenario 3: \"turn off all lights, lock the doors, and set alarm\"\n  Multi-command: Yes\n  Confidence: 1.00\n  Individual commands (3):\n    1. \"turn off all lights\"\n       Intent: turn_on, Rooms: [], Devices: [light]\n    2. \"lock the doors,\"\n       Intent: lock, Rooms: [], Devices: [lock]\n    3. \"set alarm\"\n       Intent: turn_on, Rooms: [], Devices: []\n\nScenario 4: \"open the curtains and turn on morning playlist in bedroom\"\n  Multi-command: Yes\n  Confidence: 1.00\n  Individual commands (2):\n    1. \"open the curtains\"\n       Intent: open, Rooms: [], Devices: [curtain]\n    2. \"turn on morning playlist in bedroom\"\n       Intent: turn_on, Rooms: [bedroom], Devices: []\n\nScenario 5: \"turn on kitchen lights, start coffee maker, and play news\"\n  Multi-command: Yes\n  Confidence: 1.00\n  Individual commands (3):\n    1. \"turn on kitchen lights\"\n       Intent: turn_on, Rooms: [kitchen], Devices: [light]\n    2. \"start coffee maker,\"\n       Intent: turn_on, Rooms: [], Devices: []\n    3. \"play news\"\n       Intent: play_music, Rooms: [], Devices: []\n\nScenario 6: \"goodnight routine: turn off all lights and lock all doors\"\n  Multi-command: Yes\n  Confidence: 1.00\n  Individual commands (2):\n    1. \"goodnight routine: turn off all lights\"\n       Intent: turn_on, Rooms: [], Devices: [light]\n    2. \"lock all doors\"\n       Intent: lock, Rooms: [], Devices: [lock]\n\nScenario 7: \"movie time: dim living room lights and turn on TV\"\n  Multi-command: Yes\n  Confidence: 1.00\n  Individual commands (2):\n    1. \"movie time: dim living room lights\"\n       Intent: dim, Rooms: [living room], Devices: [light]\n    2. \"turn on TV\"\n       Intent: turn_on, Rooms: [], Devices: [tv]\n\n⚡ Simulating Multi-Command Execution Flow:\n\nInput: \"turn on the lights and play music in the living room\"\n\n1. Preprocessing:\n   Multi-command detected: true\n   Confidence: 1.00\n\n2. Command Parsing:\n   Command 1: \"turn on the lights\"\n     Intent: turn_on\n     Entities: rooms=[], devices=[light]\n   Command 2: \"play music in the living room\"\n     Intent: play_music\n     Entities: rooms=[living room], devices=[music, speaker]\n\n3. Expected ChatGPT JSON:\n{\n  \"commands\": [\n    {\n      \"room\": \"living room\",\n      \"command\": \"turn_on\",\n      \"device_filter\": \"light\"\n    },\n    {\n      \"room\": \"living room\",\n      \"command\": \"play_music\",\n      \"device_filter\": \"speaker\"\n    }\n  ]\n}\n\n4. Execution Simulation:\n   Command 1: Turn on lights in living room\n     → Filter to light devices only\n     → Execute turn_on on 4 light devices\n     → Result: ✅ 4/4 lights turned on\n   Command 2: Play music in living room\n     → Filter to speaker devices only\n     → Execute play_music on 2 speaker devices\n     → Result: ✅ 2/2 speakers started playing\n\n   Final Result:\n   🎯 Multi-command completed: 6/6 actions successful\n   Command 1: ✅ 4/4 devices updated in living room\n   Command 2: ✅ 2/2 devices updated in living room\n\n🎉 Multi-Command Testing Complete!\nOverall: 6 detection tests passed, 0 failed\n",
      "error": null
    },
    "coverage": {
      "name": "Coverage Report",
      "command": "npm run test:coverage",
      "success": false,
      "results": {
        "total": 183,
        "passed": 135,
        "failed": 48,
        "skipped": 0,
        "duration": 253
      },
      "output": "\n> com.chatgtp.assistent@1.0.0 test:coverage\n> nyc mocha test/**/*.test.js --recursive --timeout 10000\n\n\n\n  Testing Framework Demo\n    Basic Test Structure\n      ✔ should demonstrate basic assertions\n      ✔ should demonstrate object assertions\n      ✔ should demonstrate array assertions\n    Mock System Demo\n      ✔ should demonstrate device mocking\n      ✔ should demonstrate home state mocking\n      ✔ should demonstrate LLM function mocking\n    Async Testing Demo\n      1) should demonstrate async/await testing\n      ✔ should demonstrate promise testing\n      ✔ should demonstrate promise rejection testing\n    Test Data Generation Demo\n      ✔ should demonstrate multilingual command generation\n      ✔ should demonstrate status query generation\n    Configuration Demo\n      ✔ should demonstrate test configuration usage\n      ✔ should demonstrate timeout configuration\n    Error Handling Demo\n      ✔ should demonstrate error assertion\n      ✔ should demonstrate graceful error handling\n    Performance Testing Demo\n      ✔ should demonstrate performance measurement\n      ✔ should demonstrate memory usage awareness\n    Best Practices Demo\n      ✔ should demonstrate descriptive test names\n      ✔ should demonstrate single responsibility testing\n      ✔ should demonstrate clear assertions with messages\n\n  Multilingual Command Processing Integration\n    Single Language Commands\n      ✔ should process en commands end-to-end\n      ✔ should process sv commands end-to-end\n      ✔ should process fr commands end-to-end\n      2) should process de commands end-to-end\n      ✔ should process es commands end-to-end\n      ✔ should process it commands end-to-end\n      ✔ should process pt commands end-to-end\n      ✔ should process nl commands end-to-end\n    Multi-Command Processing\n      3) should detect and parse English multi-commands\n      4) should handle Swedish multi-commands\n      ✔ should process multi-commands with room context\n    Mixed Language Commands\n      ✔ should handle English commands with Swedish room names\n      ✔ should handle Swedish commands with English device names\n      ✔ should handle completely mixed language commands\n    Device Type Filtering\n      ✔ should filter to lights when lights are mentioned\n      5) should distinguish between device types correctly\n      6) should handle generic room commands appropriately\n    Command Preprocessing\n      ✔ should improve command clarity through preprocessing\n      7) should handle typos and spelling errors\n      8) should suggest improvements for unclear commands\n    Performance and Scalability\n      ✔ should process commands efficiently\n      ✔ should handle concurrent command processing\n      ✔ should handle very long commands\n    Error Handling and Edge Cases\n      ✔ should handle empty commands gracefully\n      ✔ should handle unknown languages\n      ✔ should handle commands with no recognizable elements\n      9) should handle special characters and emojis\n\n  Status Query Workflow Integration\n    English Status Queries\n      10) should handle kitchen lights status query end-to-end\n      ✔ should handle room status query for bedroom\n      11) should handle global status query\n    Swedish Status Queries\n      ✔ should handle Swedish room status with character variations\n      12) should handle Swedish device type query\n      13) should handle Swedish room with definite article\n    Multilingual Support\n      ✔ should handle en status queries\n      ✔ should handle sv status queries\n      ✔ should handle fr status queries\n      ✔ should handle de status queries\n      ✔ should handle es status queries\n    Error Handling\n      14) should handle non-existent room gracefully\n      ✔ should handle malformed queries\n      15) should handle empty home state\n      ✔ should handle LLM function errors\n    Performance and Limits\n      16) should respect maxDevices limit\n      ✔ should handle large home states efficiently\n      ✔ should handle concurrent queries\n    Formatting and Localization\n      17) should format English responses correctly\n      18) should format Swedish responses correctly\n      ✔ should include device details when requested\n      19) should provide summary when details not requested\n    Regression Tests\n      ✔ should handle the Swedish kitchen light status bug\n      ✔ should handle character variations in Swedish room names\n      ✔ should return all matching devices for device type queries\n\n  Performance Benchmarks\n    Command Processing Performance\n      ✔ should process simple commands quickly\n      ✔ should handle batch command processing efficiently\n      ✔ should handle concurrent command processing\n    Status Query Performance\n      ✔ should handle status queries on large home states efficiently\n      ✔ should handle concurrent status queries\n      20) should limit response size for large device sets\n    Room Matching Performance\n      ✔ should perform fuzzy room matching quickly\n      ✔ should handle large room lists efficiently\n    Memory Usage\n      ✔ should not leak memory during repeated operations\n      ✔ should handle large data structures efficiently\n    Stress Testing\n      21) should handle rapid-fire commands without degradation\n      ✔ should handle mixed workload efficiently\n    Scalability Limits\n      ✔ should handle maximum reasonable home size\n\n  Regression Tests - Fixed Bugs\n    Swedish Kitchen Light Status Bug\n      ✔ should not incorrectly translate English livingroom to Swedish\n      ✔ should handle Swedish kitchen light status correctly\n    Swedish Room Name Translation Bug\n      22) should not translate Swedish trädgården to English garden\n      ✔ should match trädgården to Trägården correctly\n    Multi-Command Validation Bug\n      23) should accept multi-command JSON structures\n      24) should detect and parse multi-commands correctly\n    Device Type Filtering Bug\n      ✔ should filter to lights only when lights are mentioned\n      ✔ should filter to lights for typo \"ligt\"\n      25) should prefer lights for generic room commands\n    Status Query Single Device Bug\n      ✔ should return all lights when asking about lights in a room\n    Language Detection Edge Cases\n      ✔ should handle mixed language commands without crashing\n    Unicode Character Handling Bug\n      ✔ should handle Swedish characters in room names correctly\n      ✔ should normalize unicode characters for matching\n    Empty Response Bug\n      26) should provide meaningful error messages for failed queries\n      27) should handle empty home state gracefully\n    Confidence Score Bug\n      28) should assign reasonable confidence to clear commands\n      29) should assign reasonable confidence to Swedish commands\n    Performance Regression\n      ✔ should process commands within reasonable time limits\n\n  Advanced Multilingual Matcher\n    String Distance and Similarity\n      ✔ should calculate Levenshtein distance correctly\n      ✔ should calculate similarity scores correctly\n    Unicode Normalization\n      ✔ should normalize Swedish characters\n      ✔ should normalize French characters\n      ✔ should normalize German characters\n      ✔ should handle mixed character sets\n    Definite Article Removal\n      ✔ should remove English definite articles\n      30) should remove Swedish definite articles\n      ✔ should remove French definite articles\n      ✔ should remove German definite articles\n      31) should handle unknown languages gracefully\n    Phonetic Variations\n      32) should generate phonetic variations for common words\n      33) should generate variations for Swedish words\n      ✔ should handle short words\n      34) should handle empty input\n    Fuzzy Matching\n      ✔ should find exact matches with high confidence\n      35) should find close matches with good confidence\n      ✔ should handle Swedish room names\n      ✔ should handle character variations\n      ✔ should return null for no good matches\n      ✔ should handle empty candidates\n      ✔ should handle empty input\n    Room Matching\n      ✔ should find best room match with exact name\n      ✔ should find best room match with fuzzy matching\n      ✔ should handle Swedish room names with definite articles\n      ✔ should handle character variations in Swedish\n    Comprehensive Room Matching\n      ✔ should use fuzzy matching for high confidence matches\n      ✔ should fall back to LLM for low confidence fuzzy matches\n      ✔ should handle LLM function errors gracefully\n      ✔ should work without LLM function\n      ✔ should handle Swedish room matching with LLM fallback\n    Performance and Edge Cases\n      ✔ should handle very long room names\n      ✔ should handle special characters in room names\n      ✔ should handle numeric room names\n      ✔ should be case insensitive\n\n  Device Status Retriever\n    getDeviceStatus\n      ✔ should retrieve status for a light device\n      ✔ should retrieve status for a thermostat device\n      ✔ should handle offline devices\n      ✔ should handle devices with no capabilities\n    getRoomStatus\n      ✔ should retrieve status for a room with exact name match\n      ✔ should handle Swedish room names with fuzzy matching\n      ✔ should handle room names with character variations\n      ✔ should return error for non-existent room\n      ✔ should handle rooms with no devices\n    getDeviceTypeStatus\n      ✔ should retrieve all lights in the home\n      ✔ should filter lights by room\n      ✔ should handle device types with no matches\n      ✔ should handle thermostats correctly\n    generateDeviceSummary\n      ✔ should generate summary for light device\n      ✔ should generate summary for thermostat device\n      ✔ should handle devices with missing capabilities\n      ✔ should handle offline devices in summary\n    Error Handling\n      ✔ should handle device capability retrieval errors\n      ✔ should handle null device input\n      ✔ should handle invalid room matching\n\n  Status Query Processor\n    Status Query Detection\n      36) should detect English status queries\n      ✔ should detect Swedish status queries\n      ✔ should detect French status queries\n      ✔ should reject non-status queries\n    Status Query Parsing\n      ✔ should parse room status queries correctly\n      37) should parse device type queries correctly\n      38) should parse global status queries correctly\n      ✔ should handle Swedish room names with special characters\n      ✔ should return null type for non-status queries\n      ✔ should handle empty or invalid input\n    Multilingual Support\n      39) should handle en status queries\n      40) should handle sv status queries\n      41) should handle fr status queries\n      42) should handle de status queries\n      43) should handle es status queries\n      44) should handle it status queries\n      45) should handle pt status queries\n      46) should handle nl status queries\n    Confidence Scoring\n      47) should assign high confidence to clear status queries\n      ✔ should assign medium confidence to ambiguous queries\n      ✔ should assign low confidence to unclear queries\n    Edge Cases\n      ✔ should handle mixed language queries\n      ✔ should handle typos and variations\n      48) should handle very long queries\n      ✔ should handle very short queries\n\n\n  135 passing (253ms)\n  48 failing\n\n  1) Testing Framework Demo\n       Async Testing Demo\n         should demonstrate async/await testing:\n     AssertionError: expected null to be a boolean\n      at Context.<anonymous> (test/examples/frameworkDemo.test.js:100:37)\n\n  2) Multilingual Command Processing Integration\n       Single Language Commands\n         should process de commands end-to-end:\n\n      AssertionError: expected false to be true\n      + expected - actual\n\n      -false\n      +true\n      \n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/integration/multilingualCommandProcessing.test.js:42:35\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:29:18)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  3) Multilingual Command Processing Integration\n       Multi-Command Processing\n         should detect and parse English multi-commands:\n     AssertionError: expected [ …(2) ] to have property 'isMultiCommand'\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:56:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  4) Multilingual Command Processing Integration\n       Multi-Command Processing\n         should handle Swedish multi-commands:\n\n      AssertionError: expected false to be true\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:70:28)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  5) Multilingual Command Processing Integration\n       Device Type Filtering\n         should distinguish between device types correctly:\n     AssertionError: expected [ 'temperature' ] to include 'thermostat'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/integration/multilingualCommandProcessing.test.js:150:39\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:148:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  6) Multilingual Command Processing Integration\n       Device Type Filtering\n         should handle generic room commands appropriately:\n     AssertionError: expected [] to include 'light'\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:162:37)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  7) Multilingual Command Processing Integration\n       Command Preprocessing\n         should handle typos and spelling errors:\n     AssertionError: expected [] not to be empty\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/integration/multilingualCommandProcessing.test.js:200:51\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:196:20)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  8) Multilingual Command Processing Integration\n       Command Preprocessing\n         should suggest improvements for unclear commands:\n     AssertionError: expected { original: 'on', …(7) } to have property 'suggestion'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/integration/multilingualCommandProcessing.test.js:216:37\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:212:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  9) Multilingual Command Processing Integration\n       Error Handling and Edge Cases\n         should handle special characters and emojis:\n\n      AssertionError: expected 0.6 to be above 0.6\n      + expected - actual\n\n\n      at Context.<anonymous> (test/integration/multilingualCommandProcessing.test.js:306:39)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  10) Status Query Workflow Integration\n       English Status Queries\n         should handle kitchen lights status query end-to-end:\n\n      AssertionError: expected { success: true, …(5) } to have property 'type' of 'device_type_status', but got 'device_status'\n      + expected - actual\n\n      -device_status\n      +device_type_status\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:34:30)\n\n  11) Status Query Workflow Integration\n       English Status Queries\n         should handle global status query:\n\n      AssertionError: expected { success: false, …(3) } to have property 'success' of true, but got false\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:64:30)\n\n  12) Status Query Workflow Integration\n       Swedish Status Queries\n         should handle Swedish device type query:\n     AssertionError: expected '🔧 **Multiple Devices Found** (4)\\n\\n…' to include 'ljus'\n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:94:39)\n\n  13) Status Query Workflow Integration\n       Swedish Status Queries\n         should handle Swedish room with definite article:\n\n      AssertionError: expected { success: false, …(3) } to have property 'success' of true, but got false\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:105:30)\n\n  14) Status Query Workflow Integration\n       Error Handling\n         should handle non-existent room gracefully:\n\n      AssertionError: expected { success: true, …(5) } to have property 'success' of false, but got true\n      + expected - actual\n\n      -true\n      +false\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:142:30)\n\n  15) Status Query Workflow Integration\n       Error Handling\n         should handle empty home state:\n\n      AssertionError: expected { success: false, …(3) } to have property 'success' of true, but got false\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:168:30)\n\n  16) Status Query Workflow Integration\n       Performance and Limits\n         should respect maxDevices limit:\n\n      AssertionError: expected 5 to be at most 2\n      + expected - actual\n\n      -5\n      +2\n      \n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:202:36)\n\n  17) Status Query Workflow Integration\n       Formatting and Localization\n         should format English responses correctly:\n     AssertionError: expected '🔧 **Multiple Devices Found** (4)\\n\\n…' to include 'device'\n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:268:39)\n\n  18) Status Query Workflow Integration\n       Formatting and Localization\n         should format Swedish responses correctly:\n     AssertionError: expected '🔧 **Multiple Devices Found** (4)\\n\\n…' to include 'enhet'\n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:282:39)\n\n  19) Status Query Workflow Integration\n       Formatting and Localization\n         should provide summary when details not requested:\n     AssertionError: expected '🔧 **Multiple Devices Found** (4)\\n\\n…' to not include '💡'\n      at Context.<anonymous> (test/integration/statusQueryWorkflow.test.js:307:43)\n\n  20) Performance Benchmarks\n       Status Query Performance\n         should limit response size for large device sets:\n     AssertionError: expected '🔧 **Multiple Devices Found** (5)\\n\\n…' to include '10'\n      at Context.<anonymous> (test/performance/benchmarks.test.js:208:39)\n\n  21) Performance Benchmarks\n       Stress Testing\n         should handle rapid-fire commands without degradation:\n\n      AssertionError: expected 0.3 to be above 0.5\n      + expected - actual\n\n      -0.3\n      +0.5\n      \n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/performance/benchmarks.test.js:319:55\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/performance/benchmarks.test.js:313:16)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  22) Regression Tests - Fixed Bugs\n       Swedish Room Name Translation Bug\n         should not translate Swedish trädgården to English garden:\n\n      AssertionError: expected 'garden' to not equal 'garden'\n      + expected - actual\n\n\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:60:38)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  23) Regression Tests - Fixed Bugs\n       Multi-Command Validation Bug\n         should accept multi-command JSON structures:\n     AssertionError: expected [ { room: 'living room', …(2) }, …(1) ] to be true\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:96:35)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  24) Regression Tests - Fixed Bugs\n       Multi-Command Validation Bug\n         should detect and parse multi-commands correctly:\n     AssertionError: expected [ …(2) ] to have property 'isMultiCommand'\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:107:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  25) Regression Tests - Fixed Bugs\n       Device Type Filtering Bug\n         should prefer lights for generic room commands:\n     AssertionError: expected [] to include 'light'\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:139:59)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  26) Regression Tests - Fixed Bugs\n       Empty Response Bug\n         should provide meaningful error messages for failed queries:\n\n      AssertionError: expected { success: true, …(5) } to have property 'success' of false, but got true\n      + expected - actual\n\n      -true\n      +false\n      \n      at Context.<anonymous> (test/regression/fixedBugs.test.js:236:30)\n\n  27) Regression Tests - Fixed Bugs\n       Empty Response Bug\n         should handle empty home state gracefully:\n\n      AssertionError: expected { success: false, …(3) } to have property 'success' of true, but got false\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (test/regression/fixedBugs.test.js:252:30)\n\n  28) Regression Tests - Fixed Bugs\n       Confidence Score Bug\n         should assign reasonable confidence to clear commands:\n\n      AssertionError: expected 0.6 to be above 0.7\n      + expected - actual\n\n      -0.6\n      +0.7\n      \n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/regression/fixedBugs.test.js:270:41\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:268:21)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  29) Regression Tests - Fixed Bugs\n       Confidence Score Bug\n         should assign reasonable confidence to Swedish commands:\n\n      AssertionError: expected 0.6 to be above 0.6\n      + expected - actual\n\n\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/regression/fixedBugs.test.js:284:41\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/regression/fixedBugs.test.js:282:23)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  30) Advanced Multilingual Matcher\n       Definite Article Removal\n         should remove Swedish definite articles:\n\n      AssertionError: expected 'vardagsrumm' to equal 'vardagsrum'\n      + expected - actual\n\n      -vardagsrumm\n      +vardagsrum\n      \n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:84:64)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  31) Advanced Multilingual Matcher\n       Definite Article Removal\n         should handle unknown languages gracefully:\n\n      AssertionError: expected 'the kitchen' to equal 'kitchen'\n      + expected - actual\n\n      -the kitchen\n      +kitchen\n      \n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:102:67)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  32) Advanced Multilingual Matcher\n       Phonetic Variations\n         should generate phonetic variations for common words:\n     AssertionError: expected [ 'kitchen' ] to include 'kithen'\n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:111:29)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  33) Advanced Multilingual Matcher\n       Phonetic Variations\n         should generate variations for Swedish words:\n     AssertionError: expected [ 'vardagsrum', 'wardagsrum' ] to include 'vardagsrumm'\n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:118:29)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  34) Advanced Multilingual Matcher\n       Phonetic Variations\n         should handle empty input:\n\n      AssertionError: expected [] to deeply equal [ '' ]\n      + expected - actual\n\n      -[]\n      +[\n      +  \"\"\n      +]\n      \n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:130:34)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  35) Advanced Multilingual Matcher\n       Fuzzy Matching\n         should find close matches with good confidence:\n\n      AssertionError: expected { match: 'Kitchen', …(4) } to have property 'method' of 'similarity', but got 'levenshtein'\n      + expected - actual\n\n      -levenshtein\n      +similarity\n      \n      at Context.<anonymous> (test/unit/advancedMultilingualMatcher.test.js:150:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  36) Status Query Processor\n       Status Query Detection\n         should detect English status queries:\n\n      AssertionError: expected false to be true\n      + expected - actual\n\n      -false\n      +true\n      \n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:24:49\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:23:15)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  37) Status Query Processor\n       Status Query Parsing\n         should parse device type queries correctly:\n     AssertionError: expected { type: 'device_status', …(5) } to have property 'room' of 'kitchen', but got null\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:81:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  38) Status Query Processor\n       Status Query Parsing\n         should parse global status queries correctly:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'type' of 'global_status', but got null\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:88:30)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  39) Status Query Processor\n       Multilingual Support\n         should handle en status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  40) Status Query Processor\n       Multilingual Support\n         should handle sv status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  41) Status Query Processor\n       Multilingual Support\n         should handle fr status queries:\n\n      AssertionError: expected 0.5 to be above 0.5\n      + expected - actual\n\n\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:130:45\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  42) Status Query Processor\n       Multilingual Support\n         should handle de status queries:\n\n      AssertionError: expected 0.5 to be above 0.5\n      + expected - actual\n\n\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:130:45\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  43) Status Query Processor\n       Multilingual Support\n         should handle es status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  44) Status Query Processor\n       Multilingual Support\n         should handle it status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  45) Status Query Processor\n       Multilingual Support\n         should handle pt status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  46) Status Query Processor\n       Multilingual Support\n         should handle nl status queries:\n     AssertionError: expected { type: null, target: null, …(2) } to have property 'language'\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:126:34\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:124:17)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  47) Status Query Processor\n       Confidence Scoring\n         should assign high confidence to clear status queries:\n\n      AssertionError: expected 0.8 to be above 0.8\n      + expected - actual\n\n\n      at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/statusQueryProcessor.test.js:148:43\n      at Array.forEach (<anonymous>)\n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:145:20)\n      at process.processImmediate (node:internal/timers:491:21)\n\n  48) Status Query Processor\n       Edge Cases\n         should handle very long queries:\n\n      AssertionError: expected 0.5 to be above 0.6\n      + expected - actual\n\n      -0.5\n      +0.6\n      \n      at Context.<anonymous> (test/unit/statusQueryProcessor.test.js:220:39)\n      at process.processImmediate (node:internal/timers:491:21)\n\n\n\n---------------------------------|---------|----------|---------|---------|-------------------------\nFile                             | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s       \n---------------------------------|---------|----------|---------|---------|-------------------------\nAll files                        |   40.88 |    38.82 |   44.07 |   41.37 |                         \n com.chatgtp.assistent           |       0 |        0 |       0 |       0 |                         \n  app.js                         |       0 |        0 |       0 |       0 | 3-904                   \n com.chatgtp.assistent/modules   |   55.61 |     52.1 |   55.35 |   55.69 |                         \n  advancedMultilingualMatcher.js |   83.84 |    78.02 |   92.85 |   84.48 | ...,271-275,339,356-366 \n  chatgpt.js                     |       0 |        0 |       0 |       0 | 3-129                   \n  chatgptHelper.js               |       0 |        0 |       0 |       0 | 5-154                   \n  commandProcessor.js            |   86.66 |       71 |   95.65 |   86.46 | ...1,80,213,308,378-402 \n  deviceStatusRetriever.js       |   78.74 |    60.93 |     100 |   79.16 | ...,143,155-169,174,218 \n  homeyApiHelper.js              |       0 |        0 |       0 |       0 | 2-49                    \n  httpHelper.js                  |       0 |        0 |       0 |       0 | 3-52                    \n  multilingualProcessor.js       |   73.57 |    60.81 |   73.07 |      75 | ...,531-532,538,554,597 \n  speech.js                      |       0 |        0 |       0 |       0 | 3-340                   \n  statusFormatter.js             |   54.36 |    36.36 |   64.28 |      54 | ...,194-195,233-290,306 \n  statusQueryHandler.js          |   78.26 |    72.22 |    87.5 |    78.5 | ...4,79,104-155,176,225 \n  statusQueryProcessor.js        |   66.66 |    53.48 |      60 |   67.44 | 125,183-218             \n  telegram.js                    |       0 |        0 |       0 |       0 | 3-170                   \n  telegramBot.js                 |       0 |        0 |       0 |       0 | 2-146                   \n---------------------------------|---------|----------|---------|---------|-------------------------\n",
      "error": "LLM returned invalid room name: Trägården\nLLM returned invalid room name: Trägården\nLLM returned invalid room name: Kitchen\nError in semantic matching: Error: LLM Error\n    at Context.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/advancedMultilingualMatcher.test.js:246:45)\n    at callFn (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:364:21)\n    at Runnable.run (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:352:5)\n    at Runner.runTest (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:677:10)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:800:12\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:592:14)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:602:7\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:485:14)\n    at Immediate.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:570:5)\n    at process.processImmediate (node:internal/timers:491:21)\nFailed to get capability onoff for device Faulty Device: Error: Device error\n    at Context.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/deviceStatusRetriever.test.js:309:47)\n    at callFn (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:364:21)\n    at Runnable.run (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:352:5)\n    at Runner.runTest (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:677:10)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:800:12\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:592:14)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:602:7\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:485:14)\n    at Immediate.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:570:5)\n    at process.processImmediate (node:internal/timers:491:21)\nFailed to get capability dim for device Faulty Device: Error: Device error\n    at Context.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/test/unit/deviceStatusRetriever.test.js:309:47)\n    at callFn (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:364:21)\n    at Runnable.run (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runnable.js:352:5)\n    at Runner.runTest (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:677:10)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:800:12\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:592:14)\n    at /Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:602:7\n    at next (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:485:14)\n    at Immediate.<anonymous> (/Users/kjetilvetlejord/Documents/GitHub/com.chatgtp.assistent/node_modules/mocha/lib/runner.js:570:5)\n    at process.processImmediate (node:internal/timers:491:21)\nERROR: Coverage for lines (41.37%) does not meet global threshold (80%)\nERROR: Coverage for functions (44.07%) does not meet global threshold (80%)\nERROR: Coverage for branches (38.82%) does not meet global threshold (70%)\nERROR: Coverage for statements (40.88%) does not meet global threshold (80%)\n"
    }
  }
}